"""
Django settings for feas_project project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-!(8t(i04*y(j%8(zb&jkc99)#i8u_bhqe)4!qle0tkevm@dju3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
# your apps
    "accounts.apps.AccountsConfig",   # ensure accounts app config is used
    "projects",
    "allocations",
    "notifications",
    "base",
    "dashboard",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'feas_project.urls'

# Templates - ensure Django knows about your templates/ folder at project root
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],        # <-- add this line
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "accounts.context_processors.menu_processor",
            ],
        },
    },
]

WSGI_APPLICATION = 'feas_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# feas_project/settings.py

# --- existing DB settings (example) ---
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": os.getenv("MYSQL_DATABASE", "feasdb"),
        "USER": os.getenv("MYSQL_USER", "root"),
        "PASSWORD": os.getenv("MYSQL_PASSWORD", "root"),
        "HOST": os.getenv("MYSQL_HOST", "127.0.0.1"),
        "PORT": os.getenv("MYSQL_PORT", "3306"),
        "OPTIONS": {"init_command": "SET sql_mode='STRICT_TRANS_TABLES'"},
    }
}

# Optional: overrideable name for the init table used by initializer
DB_INIT_DONE_TABLE = os.getenv("DB_INIT_DONE_TABLE", "system_settings")
# (You can also set it directly: DB_INIT_DONE_TABLE = "system_settings")

# sample additions in feas_project/settings.py

# LDAP server settings (used by check_credentials)
LDAP_SERVER = '10.170.130.91'
LDAP_PORT = 389

# Leave user search base empty if you want the whole directory
LDAP_USER_SEARCH_BASE = ''

# Your forest/domain root
LDAP_BASE_DN = 'DC=ls,DC=ege,DC=ds'
LDAP_ATTRIBUTES = [
    'cn','sAMAccountName','userPrincipalName','mail','department',
    'title','telephoneNumber','lastLogonTimestamp','memberOf','jpegPhoto'
]
# Directory to save jpegPhoto files (relative to project root)
USER_PHOTOS_DIR = os.path.join(BASE_DIR, 'user_photos')

# Optional super admin (change or remove in production)
FEAS_SUPERADMIN_USERNAME = os.getenv('FEAS_SUPERADMIN_USERNAME', 'admin')
FEAS_SUPERADMIN_PASSWORD = os.getenv('FEAS_SUPERADMIN_PASSWORD', 'admin')


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",   # <-- if you keep your custom static here
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
